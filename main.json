{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1318.3566",
      "templateHash": "3113495719792675494"
    }
  },
  "parameters": {
    "deploy_location": {
      "type": "string"
    },
    "resource_group": {
      "type": "string"
    },
    "keyvault_name": {
      "type": "string"
    },
    "acr_name": {
      "type": "string"
    },
    "azure_client_id": {
      "type": "secureString"
    },
    "azure_client_secret": {
      "type": "secureString"
    },
    "azure_tenant_id": {
      "type": "secureString"
    },
    "contributor_object_id": {
      "type": "secureString"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resource_group')]",
      "location": "[parameters('deploy_location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultDeploy",
      "resourceGroup": "[parameters('resource_group')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvault_name": {
            "value": "[parameters('keyvault_name')]"
          },
          "contributor_object_id": {
            "value": "[parameters('contributor_object_id')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "6765177638357810365"
            }
          },
          "parameters": {
            "resource_location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tenant_id": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "keyvault_name": {
              "type": "string"
            },
            "contributor_object_id": {
              "type": "secureString"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[parameters('keyvault_name')]",
              "location": "[parameters('resource_location')]",
              "properties": {
                "accessPolicies": [
                  {
                    "objectId": "[parameters('contributor_object_id')]",
                    "tenantId": "[parameters('tenant_id')]",
                    "permissions": {
                      "keys": [],
                      "secrets": [
                        "all"
                      ]
                    }
                  }
                ],
                "tenantId": "[parameters('tenant_id')]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resource_group'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "serviceBusDeploy",
      "resourceGroup": "[parameters('resource_group')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvault_name": {
            "value": "[parameters('keyvault_name')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "16540133418678684752"
            }
          },
          "parameters": {
            "resource_location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "keyvault_name": {
              "type": "string"
            }
          },
          "variables": {
            "listKeysEndpoint": "[format('{0}/AuthorizationRules/RootManageSharedAccessKey', resourceId('Microsoft.ServiceBus/namespaces', 'servicebus-for-app'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2021-11-01",
              "name": "servicebus-for-app",
              "location": "[parameters('resource_location')]",
              "sku": {
                "name": "Basic"
              }
            },
            {
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2017-04-01",
              "name": "[format('{0}/{1}', 'servicebus-for-app', 'app-queue')]",
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', 'servicebus-for-app')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/servicebus-endpoint', parameters('keyvault_name'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "value": "[listKeys(variables('listKeysEndpoint'), '2021-11-01').primaryConnectionString]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', 'servicebus-for-app')]"
              ]
            }
          ],
          "outputs": {
            "secret_ref_servicebus_endpoint": {
              "type": "string",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/servicebus-endpoint', parameters('keyvault_name')), '/')[0], split(format('{0}/servicebus-endpoint', parameters('keyvault_name')), '/')[1])).secretUriWithVersion)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resource_group'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "cosmosDbDeploy",
      "resourceGroup": "[parameters('resource_group')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvault_name": {
            "value": "[parameters('keyvault_name')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "905330448326201684"
            }
          },
          "parameters": {
            "resource_location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "database_name": {
              "type": "string",
              "defaultValue": "app-db"
            },
            "container_raw_name": {
              "type": "string",
              "defaultValue": "raw-data"
            },
            "container_aggregated_name": {
              "type": "string",
              "defaultValue": "aggregated-data"
            },
            "keyvault_name": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2021-10-15",
              "name": "cosmos-db-for-app",
              "location": "[parameters('resource_location')]",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('resource_location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}', 'cosmos-db-for-app', parameters('database_name'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('database_name')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}/{2}', 'cosmos-db-for-app', parameters('database_name'), parameters('container_raw_name'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('container_raw_name')]",
                  "partitionKey": {
                    "paths": [
                      "/name"
                    ],
                    "kind": "Hash"
                  }
                },
                "options": {
                  "throughput": 400
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', 'cosmos-db-for-app', parameters('database_name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}/{2}', 'cosmos-db-for-app', parameters('database_name'), parameters('container_aggregated_name'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('container_aggregated_name')]",
                  "partitionKey": {
                    "paths": [
                      "/name"
                    ],
                    "kind": "Hash"
                  },
                  "uniqueKeyPolicy": {
                    "uniqueKeys": [
                      {
                        "paths": [
                          "/name"
                        ]
                      }
                    ]
                  }
                },
                "options": {
                  "throughput": 400
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', 'cosmos-db-for-app', parameters('database_name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/cosmos-db-key', parameters('keyvault_name'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app'), '2021-10-15').primaryMasterKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/cosmos-db-endpoint', parameters('keyvault_name'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "value": "[format('AccountEndpoint=https://{0}.documents.azure.com:443/;Accountkey={1};', 'cosmos-db-for-app', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app'), '2021-10-15').primaryMasterKey)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'cosmos-db-for-app')]"
              ]
            }
          ],
          "outputs": {
            "secret_ref_cosmos_db_key": {
              "type": "string",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/cosmos-db-key', parameters('keyvault_name')), '/')[0], split(format('{0}/cosmos-db-key', parameters('keyvault_name')), '/')[1])).secretUriWithVersion)]"
            },
            "secret_ref_cosmos_db_endpoint": {
              "type": "string",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/cosmos-db-endpoint', parameters('keyvault_name')), '/')[0], split(format('{0}/cosmos-db-endpoint', parameters('keyvault_name')), '/')[1])).secretUriWithVersion)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resource_group'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "containerRegistryDeploy",
      "resourceGroup": "[parameters('resource_group')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acr_name": {
            "value": "[parameters('acr_name')]"
          },
          "keyvault_name": {
            "value": "[parameters('keyvault_name')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "5678123226967755536"
            }
          },
          "parameters": {
            "resource_location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "keyvault_name": {
              "type": "string"
            },
            "acr_name": {
              "type": "secureString"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('acr_name')]",
              "location": "[parameters('resource_location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/acr-key-secret', parameters('keyvault_name'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('acr_name')), '2021-12-01-preview').passwords[0].value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acr_name'))]"
              ]
            }
          ],
          "outputs": {
            "secret_ref_acr_key": {
              "type": "string",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/acr-key-secret', parameters('keyvault_name')), '/')[0], split(format('{0}/acr-key-secret', parameters('keyvault_name')), '/')[1])).secretUriWithVersion)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resource_group'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "functionAppDeploy",
      "resourceGroup": "[parameters('resource_group')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "secret_ref_servicebus_endpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'serviceBusDeploy')).outputs.secret_ref_servicebus_endpoint.value]"
          },
          "secret_ref_acr_key": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'containerRegistryDeploy')).outputs.secret_ref_acr_key.value]"
          },
          "secret_ref_cosmos_db_key": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'cosmosDbDeploy')).outputs.secret_ref_cosmos_db_key.value]"
          },
          "secret_ref_cosmos_db_endpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'cosmosDbDeploy')).outputs.secret_ref_cosmos_db_endpoint.value]"
          },
          "acr_name": {
            "value": "[parameters('acr_name')]"
          },
          "azure_client_id": {
            "value": "[parameters('azure_client_id')]"
          },
          "azure_client_secret": {
            "value": "[parameters('azure_client_secret')]"
          },
          "azure_tenant_id": {
            "value": "[parameters('azure_tenant_id')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "799669128931724022"
            }
          },
          "parameters": {
            "resource_location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azure_client_id": {
              "type": "secureString"
            },
            "azure_client_secret": {
              "type": "secureString"
            },
            "azure_tenant_id": {
              "type": "secureString"
            },
            "acr_name": {
              "type": "string"
            },
            "secret_ref_servicebus_endpoint": {
              "type": "string"
            },
            "secret_ref_acr_key": {
              "type": "string"
            },
            "secret_ref_cosmos_db_key": {
              "type": "string"
            },
            "secret_ref_cosmos_db_endpoint": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "spawnerstorage",
              "location": "[parameters('resource_location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "kind": "Storage"
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "appInsightsSpawner",
              "location": "[parameters('resource_location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-03-01",
              "name": "FunctionPlan",
              "location": "[parameters('resource_location')]",
              "kind": "linux",
              "sku": {
                "name": "Y1"
              },
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "spawner",
              "location": "[parameters('resource_location')]",
              "kind": "functionapp,linux",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', 'FunctionPlan')]",
                "siteConfig": {
                  "linuxFxVersion": "python|3.8",
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', 'spawnerstorage', environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', 'spawnerstorage'), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', 'appInsightsSpawner')).InstrumentationKey]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', 'appInsightsSpawner')).InstrumentationKey)]"
                    },
                    {
                      "name": "AZURE_LOCATION",
                      "value": "northeurope"
                    },
                    {
                      "name": "AZURE_RESOURCE_GROUP",
                      "value": "micro-app"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "python"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "IMAGE_NAME",
                      "value": "[format('{0}.azurecr.io/worker:latest', parameters('acr_name'))]"
                    },
                    {
                      "name": "BASE_NAME_CONTAINER",
                      "value": "worker"
                    },
                    {
                      "name": "COSMOS_APP_DB",
                      "value": "app-db"
                    },
                    {
                      "name": "COSMOS_DB_ENDPOINT",
                      "value": "[parameters('secret_ref_cosmos_db_endpoint')]"
                    },
                    {
                      "name": "COSMOS_DB_KEY",
                      "value": "[parameters('secret_ref_cosmos_db_key')]"
                    },
                    {
                      "name": "servicebusforapp_SERVICEBUS",
                      "value": "[parameters('secret_ref_servicebus_endpoint')]"
                    },
                    {
                      "name": "AZURE_SUBSCRIPTION_ID",
                      "value": "[subscription().id]"
                    },
                    {
                      "name": "AZURE_CLIENT_ID",
                      "value": "[parameters('azure_client_id')]"
                    },
                    {
                      "name": "AZURE_CLIENT_SECRET",
                      "value": "[parameters('azure_client_secret')]"
                    },
                    {
                      "name": "AZURE_TENANT_ID",
                      "value": "[parameters('azure_tenant_id')]"
                    },
                    {
                      "name": "ACR_USERNAME",
                      "value": "[parameters('acr_name')]"
                    },
                    {
                      "name": "ACR_PASSWORD",
                      "value": "[parameters('secret_ref_acr_key')]"
                    },
                    {
                      "name": "ACR_SERVER",
                      "value": "[format('{0}.azurecr.io', parameters('acr_name'))]"
                    }
                  ]
                },
                "httpsOnly": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', 'appInsightsSpawner')]",
                "[resourceId('Microsoft.Web/serverfarms', 'FunctionPlan')]",
                "[resourceId('Microsoft.Storage/storageAccounts', 'spawnerstorage')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'containerRegistryDeploy')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'cosmosDbDeploy')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'keyVaultDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resource_group'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resource_group')), 'Microsoft.Resources/deployments', 'serviceBusDeploy')]"
      ]
    }
  ]
}